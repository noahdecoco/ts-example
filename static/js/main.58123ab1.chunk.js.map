{"version":3,"sources":["Store/AuthModule/Auth.types.ts","Store/AuthModule/Auth.reducer.ts","Store/AuthModule/Auth.sagas.ts","Store/AuthModule/Auth.actions.ts","Hooks/useWatchAction/useWatchAction.types.ts","Hooks/useWatchAction/useWatchAction.reducer.ts","Store/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AuthActionType","initialState","user","loginUser","watchLoginUser","AuthSaga","delay","put","name","type","LOGIN_USER_FULFILLED","payload","takeEvery","LOGIN_USER","all","ActionStatusType","WatchActionType","processAction","watchedActionKey","state","status","ACTIVE","REJECTED","FULFILLED","sagaMiddleware","createSagaMiddleware","store","createStore","combineReducers","authStore","action","LOGIN_USER_REJECTED","watchActionStore","ADD_ACTION_TO_POOL","IDLE","REMOVE_ACTION_FROM_POOL","actionType","replace","composeWithDevTools","applyMiddleware","run","Page1","React","lazy","Page2","Page3","App","useState","route","setRoute","className","fallback","_route","renderPage","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58123ab1.chunk.js","sourcesContent":["export interface iUser {\n  name: string;\n}\n\nexport interface iAuthState {\n  user: null | iUser;\n}\n\nexport enum AuthActionType {\n  LOGIN_USER = \"LOGIN_USER\",\n  LOGIN_USER_REJECTED = \"LOGIN_USER_REJECTED\",\n  LOGIN_USER_FULFILLED = \"LOGIN_USER_FULFILLED\",\n}\n\nexport interface iLoginUserAction {\n  type: AuthActionType.LOGIN_USER;\n}\n\nexport interface iLoginUserRejectedAction {\n  type: AuthActionType.LOGIN_USER_REJECTED;\n}\n\nexport interface iLoginUserFulfilledAction {\n  type: AuthActionType.LOGIN_USER_FULFILLED;\n  payload: iUser;\n}\n\nexport type AuthAction =\n  | iLoginUserAction\n  | iLoginUserRejectedAction\n  | iLoginUserFulfilledAction;\n","import { AuthAction, AuthActionType, iAuthState } from \"./Auth.types\";\n\nconst initialState = {\n  user: null,\n};\n\nexport const AuthReducer = (\n  state: iAuthState = initialState,\n  action: AuthAction\n): iAuthState => {\n  switch (action.type) {\n    case AuthActionType.LOGIN_USER:\n    case AuthActionType.LOGIN_USER_REJECTED:\n      return { ...state, user: null };\n\n    case AuthActionType.LOGIN_USER_FULFILLED:\n      return { ...state, user: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import { all, put, delay, takeEvery } from \"redux-saga/effects\";\nimport { AuthActionType } from \"./Auth.types\";\nimport { LoginUserFulfilledAction } from \"./Auth.actions\";\n\nfunction* loginUser() {\n  // todo: Use the Firebase service\n  yield delay(1000);\n  yield put(LoginUserFulfilledAction({ name: \"Noah\" }));\n}\n\nfunction* watchLoginUser() {\n  yield takeEvery(AuthActionType.LOGIN_USER, loginUser);\n}\n\nexport function* AuthSaga() {\n  yield all([watchLoginUser()]);\n}\n","import {\n  AuthActionType,\n  iLoginUserAction,\n  iLoginUserFulfilledAction,\n  iLoginUserRejectedAction,\n  iUser,\n} from \"./Auth.types\";\n\nexport const LoginUserAction = (): iLoginUserAction => {\n  return { type: AuthActionType.LOGIN_USER };\n};\n\nexport const LoginUserRejectedAction = (): iLoginUserRejectedAction => {\n  return { type: AuthActionType.LOGIN_USER_REJECTED };\n};\n\nexport const LoginUserFulfilledAction = (\n  user: iUser\n): iLoginUserFulfilledAction => {\n  return { type: AuthActionType.LOGIN_USER_FULFILLED, payload: user };\n};\n","export enum ActionStatusType {\n  IDLE = \"IDLE\",\n  ACTIVE = \"ACTIVE\",\n  REJECTED = \"REJECTED\",\n  FULFILLED = \"FULFILLED\",\n}\n\nexport interface iCallbackOptions {\n  onIdleHandler?: () => {};\n  onActiveHandler?: () => {};\n  onRejectedHandler?: () => {};\n  onFulfilledHandler?: () => {};\n  onCompletedHandler?: () => {};\n}\n\nexport enum WatchActionType {\n  ADD_ACTION_TO_POOL = \"ADD_ACTION_TO_POOL\",\n  REMOVE_ACTION_FROM_POOL = \"REMOVE_ACTION_FROM_POOL\",\n}\n\nexport interface iWatchActionAction {\n  type:\n    | WatchActionType.ADD_ACTION_TO_POOL\n    | WatchActionType.REMOVE_ACTION_FROM_POOL;\n  payload: string;\n}\n\nexport interface iWatchAction {\n  status: ActionStatusType;\n}\n\nexport type iWatchActionState = Record<string, iWatchAction>;\n","import {\n  ActionStatusType,\n  iWatchActionAction,\n  iWatchActionState,\n  WatchActionType,\n} from \"./useWatchAction.types\";\n\nexport const WatchActionReducer = (\n  state: iWatchActionState = {},\n  action: iWatchActionAction\n): iWatchActionState => {\n  switch (action.type) {\n    case WatchActionType.ADD_ACTION_TO_POOL:\n      return { ...state, [action.payload]: { status: ActionStatusType.IDLE } };\n\n    case WatchActionType.REMOVE_ACTION_FROM_POOL:\n      if (state[action.payload]) {\n        delete state[action.payload];\n      }\n      return state;\n\n    default:\n      const actionType: string = action.type as string;\n      const watchedActionKey = actionType\n        .replace(/_REJECTED$/g, \"\")\n        .replace(/_FULFILLED$/g, \"\");\n\n      if (state[watchedActionKey]) {\n        return processAction(action.type, watchedActionKey, { ...state });\n      } else {\n        return state;\n      }\n  }\n};\n\nconst processAction = (\n  type: string,\n  watchedActionKey: string,\n  state: iWatchActionState\n): iWatchActionState => {\n  if (type === watchedActionKey) {\n    state[watchedActionKey] = {\n      status: ActionStatusType.ACTIVE,\n    };\n  } else if (type === `${watchedActionKey}_REJECTED`) {\n    state[watchedActionKey] = {\n      status: ActionStatusType.REJECTED,\n    };\n  } else if (type === `${watchedActionKey}_FULFILLED`) {\n    state[watchedActionKey] = {\n      status: ActionStatusType.FULFILLED,\n    };\n  }\n\n  return state;\n};\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport { AuthReducer } from \"./AuthModule/Auth.reducer\";\nimport { AuthSaga } from \"./AuthModule/Auth.sagas\";\nimport { WatchActionReducer } from \"../Hooks/useWatchAction/useWatchAction.reducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(\n  combineReducers({\n    authStore: AuthReducer,\n    watchActionStore: WatchActionReducer,\n  }),\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(AuthSaga);\n","import React, { useState, Suspense } from \"react\";\n\nimport { Router } from \"@reach/router\";\nimport { useSelector } from \"react-redux\";\n\nimport { LoginView } from \"./Views/LoginView/LoginView.component\";\n\nimport { AsyncComponent } from \"./Components/AsyncComponent\";\n\nimport \"./App.css\";\nimport styles from \"./App.module.scss\";\n\nconst Page1 = React.lazy(() => import(\"./Components/Page1\"));\nconst Page2 = React.lazy(() => import(\"./Components/Page2\"));\nconst Page3 = React.lazy(() => import(\"./Components/Page3\"));\n\nfunction App() {\n  const [route, setRoute] = useState(\"Page1\");\n\n  const renderPage = (_route: string) => {\n    switch (_route) {\n      case \"Page1\":\n        return <Page1 />;\n      case \"Page2\":\n        return <Page2 />;\n      case \"Page3\":\n        return <Page3 />;\n      default:\n        return <div>Error...</div>;\n    }\n  };\n\n  const getLoadingDiv = () => {\n    return <div>Loading...</div>;\n  };\n\n  return (\n    <div className=\"App\">\n      <Suspense fallback={getLoadingDiv()}>{renderPage(route)}</Suspense>\n\n      <button onClick={() => setRoute(\"Page1\")}>Page 1</button>\n      <button onClick={() => setRoute(\"Page2\")}>Page 2</button>\n      <button onClick={() => setRoute(\"Page3\")}>Page 3</button>\n      <button onClick={() => setRoute(\"Page4\")}>Page 4</button>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./Store\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}